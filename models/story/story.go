package story

import (
	"time"
)

type Story struct {
	ID         uint       `gorm:"primaryKey"`
	UserID     uint       `gorm:"index"`
	ContentURL string     `gorm:"type:text"`      // –°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª (—Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ)
	CreatedAt  time.Time  `gorm:"autoCreateTime"` // –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
	ExpireAt   time.Time  // –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
	IsArchived bool       `gorm:"default:false"`    // –§–ª–∞–≥, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –≤ –∞—Ä—Ö–∏–≤–µ
	Views      uint       `gorm:"default:0"`        // –°—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
	Privacy    string     `gorm:"default:'public'"` // –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å (public, friends, private)
	Reactions  []Reaction // –†–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
}

type Reaction struct {
	ID        uint      `gorm:"primaryKey"`
	StoryID   uint      `gorm:"index"`
	UserID    uint      `gorm:"index"`
	Emoji     string    `gorm:"type:varchar(10)"` // –†–µ–∞–∫—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, üòä, ‚ù§Ô∏è)
	CreatedAt time.Time `gorm:"autoCreateTime"`
}

type ViewStory struct {
	ID       uint      `gorm:"primaryKey"`
	StoryID  uint      `gorm:"index"`
	UserID   uint      `gorm:"index"`
	ViewedAt time.Time `gorm:"autoCreateTime"`
}
